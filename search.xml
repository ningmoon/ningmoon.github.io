<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>用Hexo + Github Pages搭建你的个人博客</title>
      <link href="2018/04/18/Hexo180418-%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2018/04/18/Hexo180418-%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p><img src="/2018/04/18/Hexo180418-%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo-0002.png" alt="The First Title Picture" title="Optional Title"></p><a id="more"></a><p><strong>本文介绍使用Hexo + Github Pages搭建个人独立博客</strong></p><h1 id="1-写在最前面"><a href="#1-写在最前面" class="headerlink" title="1 写在最前面"></a>1 写在最前面</h1><p>Blog可能已经过了最火热的时代，特别是现在又要自己折腾一个个人的独立博客，反反复复，停停走走，最后还是下了决心决定自己搭建一个博客。</p><p>之所以想要建立一个自己的个人博客，想让自己在写博客的过程又有新的收获。</p><p><strong>提升表达能力 </strong></p><blockquote><p align="left">写博客需要花时间梳理思路、组织语言，才能清晰地表达想法。很多看似简单的概念，当落笔成文时，却会发现难以描述。这个过程能倒逼自己深入理解知识，并锻炼表达能力。</p></blockquote><p><strong>分享的连锁反应</strong></p><blockquote><p align="left">正如毛向辉在《分享主义》中所说：“通过分享，你获得了直接而快速的回报，你最终或许会发现你已将版权和‘保留所有权利’抛诸脑后。新的经济学准则是：参与你作品的人越多，回报越高。在分享主义里，如果你愿意你可以保留所有权，但是我乐于分享。”</p></blockquote><p><strong>记录成长历程</strong></p><blockquote><p align="left">回首过去，我们常常会发现曾经的自己很幼稚，但正是这些青涩的经历让我们不断成长。记录成长的点滴，可以帮助我们反思过去，更好地展望未来。</p></blockquote><p><strong>探索未知的世界</strong></p><blockquote><p align="left">世界远比我们想象中要精彩。通过写博客，我们可以与来自五湖四海的博主交流，探索更广阔的知识领域，发现更多志同道合的朋友。</p></blockquote><p><strong>帮助更多想要获取帮助的人</strong></p><blockquote><p align="left">在学习新知识的过程中，我们常常会遇到困难。如果能找到一篇清晰易懂的解释文章，无疑会事半功倍。我希望我的博客也能为他人提供帮助，为知识的传播贡献一份力量。</p></blockquote><h1 id="2-系统环境配置"><a href="#2-系统环境配置" class="headerlink" title="2 系统环境配置"></a>2 系统环境配置</h1><p>要使用Hexo，就需要在系统中安装Nodejs以及Git。<br><strong><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">安装Nodejs</a></strong><br><strong><a href="https://git-scm.com/download/" target="_blank" rel="noopener">安装Git</a></strong><br><strong>安装Hexo</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/hexo</span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo g <span class="comment"># 或者hexo generate</span></span><br><span class="line">$ hexo s <span class="comment"># 或者hexo server，可以在http://localhost:4000/ 查看</span></span><br></pre></td></tr></table></figure><p>这里有必要提下Hexo常用的几个命令：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo generate (hexo g)<span class="comment">#生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span></span><br><span class="line">hexo server (hexo s) <span class="comment">#启动本地web服务，用于博客的预览</span></span><br><span class="line">hexo deploy (hexo d) <span class="comment">#部署播客到远端（比如github, heroku等平台）</span></span><br></pre></td></tr></table></figure><br>另外还有其他几个常用命令：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">$ hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br></pre></td></tr></table></figure><br>常用简写<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n == hexo new</span><br><span class="line">$ hexo g == hexo generate</span><br><span class="line">$ hexo s == hexo server</span><br><span class="line">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure><br>常用组合<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g <span class="comment">#生成部署</span></span><br><span class="line">$ hexo s -g <span class="comment">#生成预览</span></span><br></pre></td></tr></table></figure><br>现在我们打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。</p><p>目前我安装所用的本地环境如下：(通过hexo -v查看)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">hexo: 3.5.0</span><br><span class="line">hexo-cli: 1.0.4</span><br><span class="line">os: Darwin 17.3.0 darwin x64</span><br><span class="line">http_parser: 2.7.0</span><br><span class="line">node: 8.9.4</span><br><span class="line">v8: 6.1.534.50</span><br><span class="line">uv: 1.15.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.25.0</span><br><span class="line">openssl: 1.0.2n</span><br><span class="line">icu: 59.1</span><br><span class="line">unicode: 9.0</span><br><span class="line">cldr: 31.0.1</span><br><span class="line">tz: 2017b</span><br></pre></td></tr></table></figure></p><h1 id="3-Hexo主题设置"><a href="#3-Hexo主题设置" class="headerlink" title="3 Hexo主题设置"></a>3 Hexo主题设置</h1><p>这里以主题light为例进行说明。</p><p>安装主题<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ git clone git clone git://github.com/tommy351/hexo-theme-light.git themes/light</span><br></pre></td></tr></table></figure><br>启用主题<br>修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为light。</p><p>更新主题<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd themes/light</span><br><span class="line">$ git pull</span><br><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动本地web服务器</span></span><br></pre></td></tr></table></figure><br>现在打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，会看到我们已经应用了一个新的主题。</p><h1 id="4-Github-Pages设置"><a href="#4-Github-Pages设置" class="headerlink" title="4 Github Pages设置"></a>4 Github Pages设置</h1><p>GitHub Pages 本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。</p><p>每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，这是特殊的命名约定。你可以通过<a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a> 来访问你的个人主页。(这里特别提醒一下，需要注意的个人主页的网站内容是在master分支下的。)</p><p>创建自己的Github Pages<br>注册GitHub及使用Github Pages的过程不做赘述，创建之后创建一个github repo叫做 xxx(your username).github.io. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接<a href="http://xxx(your" target="_blank" rel="noopener">http://xxx(your</a> username).github.io/ 访问了。</p><h1 id="5-部署Hexo到Github-Pages"><a href="#5-部署Hexo到Github-Pages" class="headerlink" title="5 部署Hexo到Github Pages"></a>5 部署Hexo到Github Pages</h1><p>有了上一步的基础，这一步是将我们本地的web部署到github上，然后就可以通过<a href="http://xxx(your" target="_blank" rel="noopener">http://xxx(your</a> username).github.io/ 直接访问了。</p><p>首先需要明白所谓部署到github的原理。</p><p>之前步骤中在Github上创建的那个特别的repo（xxx(your username).github.io）一个最大的特点就是其master中的html静态文件，可以通过链接<a href="http://xxx(your" target="_blank" rel="noopener">http://xxx(your</a> username).github.io来直接访问。</p><p>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</p><p>需要将hexo生成的静态网站，提交(git commit)到github上。</p><p>明白了原理，怎么做自然就清晰了。</p><p>可以参考下面的图片：<br><img src="/2018/04/18/Hexo180418-%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo-0003.png" alt title="Optional Title"></p><p>如果还不明白，可以自己做做功课补习一下。</p><p>使用hexo deploy部署<br>hexo deploy可以部署到很多平台，具体可以参考这个<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:xxx(your username).github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><br>然后在命令行中执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><br>即可完成部署。</p><p>要能成功部署，需要提前安装一个扩展：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>使用git命令行部署<br>使用hexo depoly确实很方便，但是有的时候会出现一些bug，所以个人还是更喜欢直接用Git命令来完成部署。</p><p>clone github repo 进入你的blog文件夹，然后clone你的GitHub repo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;xxx&#x2F;xxx(your username).github.io.git .deploy&#x2F;xxx(your username).github.io</span><br></pre></td></tr></table></figure><br>上一行代码的意思是将我们之前创建的repo克隆到本地的一个叫做.deploy的新建的文件夹用于存放克隆的代码。</p><p>将下面的代码直接封装成sh，每次需要部署的时候直接bash执行就行。</p><p>具体每行代码的意思见注释。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cp -R public/* .deploy/xxx(your username).github.io</span><br><span class="line"><span class="comment">#这一行是复制blog下面的public中的网页代码到我们Git的本地文件夹</span></span><br><span class="line">cd .deploy/xxx(your username).github.io</span><br><span class="line"><span class="comment">#进入这个本地的Git文件夹</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#加载此文件夹下面所有的文件</span></span><br><span class="line">git commit -m “update”</span><br><span class="line"><span class="comment">#提交代码</span></span><br><span class="line">git push </span><br><span class="line"><span class="comment">#push到GitHub上</span></span><br></pre></td></tr></table></figure></p><p>到这里你的个人博客基本框架搭建起来了，这里根据你自己所选的主题配置的不同，你的个性化设置也可以不一样，有很多的配置，现在不熟悉也没有关系，可以慢慢的摸索，后面我还会分享一些个人搭建过程中的小小心得经验。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
